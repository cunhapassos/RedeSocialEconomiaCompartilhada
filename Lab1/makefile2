#Para escrever coment√°rios ##
############################# Makefile ##########################

# define some Makefile variables for the compiler and compiler flags
# to use Makefile variables later in the Makefile: $()
#
#  -g    adds debugging information to the executable file
#  -Wall turns on most, but not all, compiler warnings

# 'make'        build executable file 'mycc'
# 'make clean'  removes all .o and executable files
# 'mrproper'	Apaga tudo o que deve ser modificado.No console escreva make mrproper

prefix=/opt/local
libdir=${prefix}/lib 			# Pasta da biblioteca CUnit
includedir=${prefix}/include	# Pasta dos arquivos headers do CUnit
# LIBS  = -L.${libdir}
LIBS = -L${libdir}

#			-I. eh incluido para que o gcc procure na pasta ${includedir} pelo arquivo de inclusao .h
# INCLUDES = -I.${includedir}
INCLUDES = -I${includedir}

CC = gcc
CFLAGS = -Wall -ftest-coverage -fprofile-arcs

#			-lcunit eh uma flag/opcao para vincular todo o conteudo de CUnit ao programa criado grafo
all: grafo
grafo: grafo.o testa_grafo.o main.o
				$(CC) $(LIBS) main.o grafo.o testa_grafo.o -lcunit -lncurses -o grafo

grafo.o: grafo.c
				gcc -c -w grafo.c

testa_grafo.o: testa_grafo.c grafo.h
				$(CC) -c $(INCLUDES) testa_grafo.c

main.o: main.c testa_grafo.h
				$(CC) -c $(INCLUDES) main.c


gcov: grafoG.o testa_grafoG.o mainG.o
				$(CC) $(CFLAGS) main.o grafo.o testa_grafo.o -lcunit -o testa_grafo

grafoG.o: grafo.c
				$(CC) -c -w $(CFLAGS) grafo.c

testa_grafoG.o: testa_grafo.c grafo.h
				$(CC) -c -w $(CFLAGS) testa_grafo.c

mainG.o: main.c testa_grafo.h
				$(CC) -c -w $(CFLAGS) main.c

clean:
				rm -rf *.o
# apaga tudo que deve ser modificado
mrproper: clean
				rm -rf grafo